#!/usr/bin/make -f

# include common debian support
include buildsys/common/include/debian.mk

# Enable hardening build flags
export DEB_BUILD_MAINT_OPTIONS=hardening=+all

CXXFLAGS += $(CPPFLAGS)

UPSTREAM_VERSION  = $(shell echo $(DEB_VERSION_UPSTREAM) | sed -e 's/\+.*//')

BUILD_DATE = $(shell LC_ALL=C date -u "+%d %B %Y" -d "@$(SOURCE_DATE_EPOCH)")

DEB_HOST_MULTIARCH ?= $(shell dpkg-architecture -qDEB_HOST_MULTIARCH)

PREFIX=/usr

# use this build directory
DEB_BUILDDIR=build/obj-$(DEB_BUILD_GNU_TYPE)

CMAKE_FLAGS =  \
	-DCMAKE_INSTALL_PREFIX:PATH=$(PREFIX) \
	 -DCMAKE_BUILD_TYPE=RelWithDebInfo \
	                     -DCMAKE_INSTALL_LIBDIR=lib \
	                     -DBUILD_PLUGIN_GREYHOUND=ON \
	                     -DBUILD_PLUGIN_ICEBRIDGE=ON \
	                     -DBUILD_PLUGIN_PYTHON=ON \
	                     -DBUILD_PLUGIN_SQLITE=ON \
	                     -DWITH_LASZIP=ON \
	                     -DWITH_TESTS=OFF \
	                     -DWITH_COMPLETION=ON

%:
	dh $@ -Scmake -B$(DEB_BUILDDIR) --parallel

override_dh_clean:
	if [ -e debian/gtest.config.guess ]; then \
		mv debian/gtest.config.guess vendor/gtest/build-aux/config.guess ; \
	fi
	if [ -e debian/gtest.config.sub ]; then \
		mv debian/gtest.config.sub   vendor/gtest/build-aux/config.sub ; \
	fi

	#revert patches
	for p in debian/patches/*.patch; do \
		if patch -R -p1 -f --dry-run < $$p > /dev/null 2>&1; then \
			patch -R -p1 < $$p; \
		fi; \
	done

	dh_clean debian/man/*.1

	$(RM) -r doc/html

override_dh_auto_configure:
	#apply patches
	for p in debian/patches/*.patch; do \
		if patch -p1 -f --dry-run < $$p > /dev/null 2>&1; then \
			patch -p1 < $$p; \
		fi; \
	done

	# Don't use outdated autotools helper files
	#mv src/vendor/gtest/build-aux/config.guess debian/gtest.config.guess
	#mv src/vendor/gtest/build-aux/config.sub   debian/gtest.config.sub

	#cp /usr/share/misc/config.guess src/vendor/gtest/build-aux/config.guess
	#cp /usr/share/misc/config.sub   src/vendor/gtest/build-aux/config.sub

	dh_auto_configure -- $(CMAKE_FLAGS) ../../src

override_dh_auto_build:
	# Create man pages from DocBook XML
	#for x in $(MANPAGES) ; do \
	#  docbook2x-man --string-param header-3="$(BUILD_DATE)" $$x ; \
	#  mv `basename $$x | sed 's/.xml$$//'` `dirname $$x` ; \
	#done

	dh_auto_build

	#sphinx-build src/doc/ doc/html/ && ln -s /usr/share/javascript/mathjax doc/html/_static/

override_dh_auto_test:
	# Exclude tests:
	# - pgpointcloudtest, requires configured PostgreSQL database
	# - pdal_spatial_reference_test, fails sometimes
	(cd obj-* && ctest --force-new-ctest-process --output-on-failure --exclude-regex "pgpointcloudtest|pdal_spatial_reference_test" || echo "Ignoring test failures")

override_dh_auto_install:
	dh_auto_install

	# Strip RPATH
	chrpath --delete debian/tmp/usr/lib/libpdal_plugin_*.so

override_dh_install:
	dh_install --list-missing

override_dh_makeshlibs:
	dpkg-gensymbols -plibpdal-util7 -v$(UPSTREAM_VERSION) -Odebian/libpdal-util7.symbols -edebian/libpdal-util7/usr/lib/libpdal_util.so.7
	
	dpkg-gensymbols -plibpdal-base7 -v$(UPSTREAM_VERSION) -Odebian/libpdal-base7.symbols -edebian/libpdal-base7/usr/lib/libpdal_base.so.7

	dh_makeshlibs -- -v$(UPSTREAM_VERSION) -c0


# ignore these:
override_dh_lintian:
override_dh_installdocs:
override_dh_installman:

